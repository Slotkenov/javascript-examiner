@article{Ramsey:2014TDP,
 author = {Ramsey, Norman},
 title = {On Teaching *How to Design Programs*: Observations from a Newcomer},
 journal = {SIGPLAN Not.},
 issue_date = {September 2014},
 volume = {49},
 number = {9},
 month = aug,
 year = {2014},
 issn = {0362-1340},
 pages = {153--166},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2692915.2628137},
 doi = {10.1145/2692915.2628137},
 acmid = {2628137},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {how to design programs, introductory programming course, program by design, racket, reflective practice},
} 

@article{bieniusa2008htdp,
  title={HtDP and DMdA in the battlefield},
  author={Bieniusa, Annette and Degen, Markus and Heidegger, Phillip and Thiemann, Peter and Wehr, Stefan and Gasbichler, Martin and Crestani, Marcus and Klaeren, Herbert and Knauel, Eric and Sperber, Michael},
  journal={Functional and Declarative Programming in Education, Victoria, BC, Canada},
  year={2008}
}

@online{website:js-complexity,
  title = {{About complexity | JSComplexity.org}},
  url = {http://jscomplexity.org/complexity},
  urldate = {2014-11-23},
  author = {Booth, Phil and Harlock, Perry},
  year = {2014},
  file = {About complexity | JSComplexity.org:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/EMZC5JWM/complexity.html:text/html}
}

@inproceedings{gerdes2012interactive,
  location = {{New York, NY, USA}},
  title = {{An Interactive Functional Programming Tutor}},
  isbn = {978-1-4503-1246-2},
  url = {http://doi.acm.org/10.1145/2325296.2325356},
  doi = {10.1145/2325296.2325356},
  abstract = {We introduce an interactive tutor that supports the stepwise development of simple functional programs. Using this tutor, students receive feedback about whether or not they are on the right track, can ask for a hint when they are stuck, and get suggestions about how to refactor their program. Our tutor generates this semantically rich feedback from model solutions, using advanced concepts from software technology. We show how a teacher can add an exercise to the tutor, and fine-tune feedback. We report on an experiment in which we used our tutor.},
  booktitle = {{Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education}},
  series = {{ITiCSE '12}},
  publisher = {{ACM}},
  author = {Gerdes, Alex and Jeuring, Johan and Heeren, Bastiaan},
  urldate = {2014-11-23},
  year = {2012},
  pages = {250--255},
  keywords = {functional programmiing,haskell,tutoring},
  file = {An Interactive Functional Programming Tutor.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/IKX6W8W8/An Interactive Functional Programming Tutor.pdf:application/pdf}
}

@book{gerdes2012ask,
  title = {{Ask-Elle: a Haskell Tutor}},
  url = {http://www.botkes.nl/wp-content/uploads/HaskellTutor.pdf},
  shorttitle = {{Ask-Elle}},
  publisher = {{PhD thesis, Universiteit Utrecht}},
  author = {Gerdes, Alex},
  urldate = {2014-11-24},
  date = {2012},
  year = {2012},
  file = {[PDF] from botkes.nl:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/SHSU52V8/Gerdes - 2012 - Ask-Elle a Haskell Tutor.pdf:application/pdf}
}

@inbook{jeuring2012ask,
  title = {{Ask-Elle: A Haskell Tutor}},
  year = {2012},
  rights = {{©2012 Springer-Verlag Berlin Heidelberg}},
  isbn = {978-3-642-33262-3, 978-3-642-33263-0},
  url = {http://link.springer.com.ezproxy.elib10.ub.unimaas.nl/chapter/10.1007/978-3-642-33263-0_42},
  shorttitle = {{Ask-Elle}},
  abstract = {In this demonstration we will introduce Ask-Elle, a Haskell tutor. Ask-Elle supports the incremental development of Haskell programs. It can give hints on how to proceed with solving a programming exercise, and feedback on incomplete student programs. We will show Ask-Elle in action, and discuss how a teacher can configure its behaviour.},
  number = {7563},
  booktitle = {{21st Century Learning for 21st Century Skills}},
  series = {{Lecture Notes in Computer Science}},
  publisher = {{Springer Berlin Heidelberg}},
  author = {Jeuring, Johan and Gerdes, Alex and Heeren, Bastiaan},
  urldate = {2014-11-24},
  date = {2012-01-01},
  pages = {453--458},
  langid = {english},
  keywords = {Artificial Intelligence (incl. Robotics),Computer Communication Networks,Data Mining and Knowledge Discovery,Information Storage and Retrieval,Information Systems Applications (incl. Internet),User Interfaces and Human Computer Interaction},
  file = {Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/6AFSVXH7/Jeuring et al. - 2012 - Ask-Elle A Haskell Tutor.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/B8VIDN4N/10.html:text/html}
}

@inproceedings{yu2010survey,
  title = {{A survey on metric of software complexity}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5477581},
  booktitle = {{Information Management and Engineering (ICIME), 2010 The 2nd IEEE International Conference on}},
  publisher = {{IEEE}},
  author = {Yu, Sheng and Zhou, Shijie},
  urldate = {2014-11-23},
  year = {2010},
  date = {2010},
  pages = {352--356},
  file = {[PDF] from nd.edu:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/HR7QR278/Yu and Zhou - 2010 - A survey on metric of software complexity.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/CKVZS65U/login.html:text/html}
}

@online{website:closure-compiler,
  title = {{Closure Tools — Google Developers}},
  url = {https://developers.google.com/closure/compiler/},
  author = {Google},
  urldate = {2014-11-23},
  year = {2014},
  file = {Closure Tools — Google Developers:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/G97SIQPB/compiler.html:text/html}
}

@article{gill1991cyclomatic,
  title = {{Cyclomatic complexity density and software maintenance productivity}},
  volume = {{17}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=106988},
  number = {12},
  journaltitle = {{Software Engineering, IEEE Transactions on}},
  shortjournal = {{Softw. Eng. IEEE Trans. On}},
  author = {Gill, Geoffrey K. and Kemerer, Chris F.},
  urldate = {2014-11-23},
  date = {1991},
  year = {1991},
  pages = {1284--1288},
  file = {[PDF] from googlecode.com:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/SQQK7AMA/Gill and Kemerer - 1991 - Cyclomatic complexity density and software mainten.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/RC9DKG62/login.html:text/html}
}

@book{goodrich2008data,
  title = {{Data Structures and Algorithms in Java}},
  publisher = {{John Wiley \& Sons}},
  author = {Goodrich, Michael T. and Tamassia, Roberto and Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
  date = {2008},
  year = {2008}
}

@article{guri-rosenblit2005distance,
  title = {{‘Distance education’ and ‘e-learning’: Not the same thing}},
  volume = {{49}},
  issn = {0018-1560, 1573-174X},
  url = {http://link.springer.com.ezproxy.elib10.ub.unimaas.nl/article/10.1007/s10734-004-0040-0},
  doi = {10.1007/s10734-004-0040-0},
  shorttitle = {{‘Distance education’ and ‘e-learning’}},
  abstract = {This article examines the distinct differences between ‘distance education’ and ‘e-learning’ in higher education settings. Since the emergence of the new information and communication technologies (ICT), many have related to them as the new generation of distance education, and some have referred to their implementation in academia as challenging the very existence of campus-based universities. Many policy makers, scholars and practitioners in higher education use these two terms interchangeably as synonyms. But the fact is that distance education in most higher education systems is not delivered through the new electronic media, and vice versa – e-learning in most universities and colleges all over the world is not used for distance education purposes. ‘Distance education’ and ‘e-learning’ do overlap in some cases, but are by no means identical. The lack of distinction between ‘e-learning’ and ‘distance education’ accounts for much of the misunderstanding of the ICT roles in higher education, and for the wide gap between the rhetoric in the literature describing the future sweeping effects of the ICT on educational environments and their actual implementation. The article examines the erroneous assumptions on which many exaggerated predictions as to the future impact of the ICT were based upon, and it concludes with highlighting the future trends of ‘distance education’ and ‘e-learning’ in academia.},
  number = {4},
  journaltitle = {{Higher Education}},
  shortjournal = {{High Educ}},
  author = {Guri-Rosenblit, Sarah},
  urldate = {2014-11-23},
  date = {2005-06-01},
  year = {2005},
  pages = {467--493},
  langid = {english},
  keywords = {distance education,distance teaching universities,Education (general),e-learning,higher education,information and communication technologies},
  file = {Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/3GX9S5MK/Guri-Rosenblit - 2005 - ‘Distance education’ and ‘e-learning’ Not the sam.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/GQIFDVDT/10.html:text/html}
}

@article{ypsilandis2002feedback,
  title = {{Feedback in Distance Education}},
  volume = {{15}},
  issn = {0958-8221},
  url = {http://dx.doi.org/10.1076/call.15.2.167.8191},
  doi = {10.1076/call.15.2.167.8191},
  abstract = {This study investigates the feedback features of a distance learning teacher training course in second/foreign language learning (Greek). The course attempted to offer a balanced syllabus on the theory of second/foreign language learning and practical information for language teachers to adopt and implement in the language classroom. The course embodied 10 units incorporated into five modules, namely: (i) methodology of teaching; (ii) teaching of listening; (iii) teaching of writing; (iv) teaching of spelling; and (v) testing. Each module was designed to take approximately –4 hr for students to complete. All the material was stored on the Internet and participants were provided with user names and passwords to access it from their location. Instructions on how to run the software and useful tips relating to distance self-study were also provided on-line. Where possible, the material was written in a conversational style in order to activate the participants' knowledge of the subject. From a total of 51 applications, 33 applicants were selected, and 21 actually started the course. All participants had to submit a compulsory assignment for every module (every 15 days) and two final projects (of their choice from a total of five topics), after having completed the five modules. Drop-out rates were very low; 18 students finished the course successfully and completed a questionnaire related to technical, design, relevance, and feedback issues. The results revealed several interesting issues related to design, application and feedback, resulting from the way in which each student exploited the material for self-study.},
  number = {2},
  journaltitle = {{Computer Assisted Language Learning}},
  shortjournal = {{Comput. Assist. Lang. Learn.}},
  author = {Ypsilandis, G.S.},
  urldate = {2014-11-23},
  date = {2002-04-01},
  year = {2002},
  pages = {167--181},
  file = {Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/MHMCM4RJ/Ypsilandis - 2002 - Feedback in Distance Education.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/6BNCBP3M/call.15.2.167.html:text/html}
}

@article{shepherd2011graduate,
  title = {{Graduate student preference for instructor feedback in MBA distance education}},
  volume = {{14}},
  issn = {1941-3432},
  journaltitle = {{Research in higher education journal}},
  shortjournal = {{Res. High. Educ. J.}},
  author = {Shepherd, Morgan},
  date = {2011-12-01},
  year = {2011},
  pages = {1},
  file = {11971.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/MSZCTDFI/11971.pdf:application/pdf;SFX by Ex Libris Inc.:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/4QK8IJ9J/sfx_local.html:text/html}
}

@article{alomari2009investigating,
  title = {{Investigating online learning environments in a web-based math course in Jordan}},
  volume = {{5}},
  issn = {1814-0556},
  number = {3},
  journaltitle = {{International Journal of Education and Development using Information and Communication Technology}},
  shortjournal = {{INT J EDUC DEV USING INF COMMUN TECHNOL}},
  author = {Alomari, Akram M.},
  date = {2009-05-30},
  year = {2009},
  pages = {F1},
  file = {SFX by Ex Libris Inc.:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/T34GHZS5/sfx_local.html:text/html}
}

@inproceedings{burckhardt2013its,
  location = {{New York, NY, USA}},
  title = {{It's Alive! Continuous Feedback in UI Programming}},
  isbn = {978-1-4503-2014-6},
  url = {http://doi.acm.org/10.1145/2491956.2462170},
  doi = {10.1145/2491956.2462170},
  abstract = {Live programming allows programmers to edit the code of a running program and immediately see the effect of the code changes. This tightening of the traditional edit-compile-run cycle reduces the cognitive gap between program code and execution, improving the learning experience of beginning programmers while boosting the productivity of seasoned ones. Unfortunately, live programming is difficult to realize in practice as imperative languages lack well-defined abstraction boundaries that make live programming responsive or its feedback comprehensible. This paper enables live programming for user interface programming by cleanly separating the rendering and non-rendering aspects of a UI program, allowing the display to be refreshed on a code change without restarting the program. A type and effect system formalizes this separation and provides an evaluation model that incorporates the code update step. By putting live programming on a more formal footing, we hope to enable critical and technical discussion of live programming systems.},
  booktitle = {{Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation}},
  series = {{PLDI '13}},
  publisher = {{ACM}},
  author = {Burckhardt, Sebastian and Fahndrich, Manuel and de Halleux, Peli and McDirmid, Sean and Moskal, Michal and Tillmann, Nikolai and Kato, Jun},
  urldate = {2014-11-23},
  date = {2013},
  year = {2013},
  pages = {95--104},
  keywords = {graphical user interface,live programming},
  file = {p95-burckhardt.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/84SCK6CR/p95-burckhardt.pdf:application/pdf}
}

@inproceedings{obrien2014java,
  location = {{New York, NY, USA}},
  title = {{Java Tutor: Bootstrapping with Python to Learn Java}},
  isbn = {978-1-4503-2669-8},
  url = {http://doi.acm.org/10.1145/2556325.2567873},
  doi = {10.1145/2556325.2567873},
  shorttitle = {{Java Tutor}},
  abstract = {A common pattern among undergraduate computer science curriculums is to teach an introductory subject in Python followed by a more advanced software engineering subject in Java. We are building an online tool that will help students who already know Python learn the syntax and semantics of Java. Our system will differ from existing online tutors and tools for learning Java in two main aspects. First, our tutor will focus on the transition from Python to Java. Using this basis will allow us to gloss over basic concepts of programming which students are already familiar with and focus on the specifics of Java. Second, our tutor will crowdsource writing test cases for problems to the learners themselves. This will give students practice writing tests, and will also reduce the burden on instructors, who would otherwise need to implement test suites for every problem in the tutor.},
  booktitle = {{Proceedings of the First ACM Conference on Learning @ Scale Conference}},
  series = {{L@S '14}},
  publisher = {{ACM}},
  author = {O'Brien, Casey and Goldman, Max and Miller, Robert C.},
  urldate = {2014-11-23},
  date = {2014},
  year = {2014},
  pages = {185--186},
  keywords = {java,python,tutor},
  file = {p185-obrien.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/3ZHUTRDS/p185-obrien.pdf:application/pdf}
}

@inbook{watson2011learning,
  title = {{Learning Programming Languages through Corrective Feedback and Concept Visualisation}},
  rights = {{©2011 Springer-Verlag GmbH Berlin Heidelberg}},
  isbn = {978-3-642-25812-1, 978-3-642-25813-8},
  url = {http://link.springer.com.ezproxy.elib10.ub.unimaas.nl/chapter/10.1007/978-3-642-25813-8_2},
  abstract = {In this paper we address common issues faced by students in programming courses by combining implicit and explicit feedback measures to provide real-time assistance in coding tasks. We also introduce our concept visualisation technique, which aims to visually convey programming concepts and information on the execution state to students. The mapping between game content construction actions and actual source code forms an implicit example-based learning environment, allowing programming concepts to be more clearly conveyed than in conventional integrated development environment (IDE) or static lecture materials. An experimental evaluation of a prototype system suggests the potential of this approach for programming education by scoring highly in terms of both user satisfaction and potential pedagogical capability.},
  number = {7048},
  booktitle = {{Advances in Web-Based Learning - ICWL 2011}},
  series = {{Lecture Notes in Computer Science}},
  publisher = {{Springer Berlin Heidelberg}},
  author = {Watson, Christopher and Li, Frederick W. B. and Lau, Rynson W. H.},
  editor = {Leung, Howard and Popescu, Elvira and Cao, Yiwei and Lau, Rynson W. H. and Nejdl, Wolfgang},
  urldate = {2014-11-23},
  date = {2011-01-01},
  year = {2011},
  pages = {11--20},
  langid = {english},
  keywords = {Artificial Intelligence (incl. Robotics),Computers and Education,Concept Visualization,Corrective Feedback,Information Storage and Retrieval,Information Systems Applications (incl. Internet),Multimedia Information Systems,Programming Education,User Interfaces and Human Computer Interaction},
  file = {Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/REJAETU4/Watson et al. - 2011 - Learning Programming Languages through Corrective .pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/RD59KNF5/10.html:text/html}
}

@article{rakic2013problems,
  title = {{Problems in systematic application of software metrics and possible solution}},
  url = {http://arxiv.org/abs/1311.3852},
  journaltitle = {{arXiv preprint arXiv:1311.3852}},
  shortjournal = {{ArXiv Prepr. ArXiv13113852}},
  author = {Rakic, Gordana and Budimac, Zoran},
  urldate = {2014-11-23},
  date = {2013},
  year = {2013},
  file = {[PDF] from arxiv.org:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/ZJIR2HUF/Rakic and Budimac - 2013 - Problems in systematic application of software met.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/BX93X3JV/1311.html:text/html}
}

@article{heeren2009recognizing,
  title = {{Recognizing Strategies}},
  volume = {{237}},
  issn = {1571-0661},
  year = {2009},
  url = {http://www.sciencedirect.com/science/article/pii/S1571066109001169},
  doi = {10.1016/j.entcs.2009.03.037},
  abstract = {We use strategies to specify how a wide range of exercises can be solved incrementally, such as bringing a logic proposition to disjunctive normal form, reducing a matrix, or calculating with fractions. With such a strategy, we can automatically generate worked-out solutions, track the progress of a student by inspecting submitted intermediate answers, and report back suggestions in case the student deviates from the strategy. Because we can calculate all kinds of feedback automatically from a strategy specification, it becomes less labor-intensive and less ad-hoc to specify new exercise domains and exercises within that domain.

A strategy describes valid sequences of transformation rules that solve the exercise at hand, which turns tracking intermediate steps into a parsing problem. This is a promising view at the problem because it allows us to take advantage of many years of experience in parsing sentences of context-free languages, and transfer this knowledge and technology to the domain of stepwise solving exercises.

In this paper we work out the similarities between parsing and solving exercises incrementally, and we discuss the implementation of a recognizer for strategies. We present a full implementation of such a recognizer, and discuss a number of design choices we have made. In particular, we discuss the use of a fixed point combinator to deal with repetition, and labels to mark positions in the strategy.},
  journaltitle = {{Electronic Notes in Theoretical Computer Science}},
  shortjournal = {{Electronic Notes in Theoretical Computer Science}},
  series = {{Proceedings of the 8th International Workshop on Reduction Strategies in Rewriting and Programming (WRS 2008)}},
  author = {Heeren, Bastiaan and Jeuring, Johan},
  urldate = {2014-11-23},
  date = {2009-04-04},
  pages = {91--106},
  keywords = {combinator languages,exercise assistants,grammars,parsing,strategies},
  file = {ScienceDirect Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/QW9ABSHW/Heeren and Jeuring - 2009 - Recognizing Strategies.pdf:application/pdf;ScienceDirect Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/FJTPMU4K/S1571066109001169.html:text/html}
}

@article{heeren2010specifying,
  title = {{Specifying Rewrite Strategies for Interactive Exercises}},
  volume = {{3}},
  issn = {1661-8270, 1661-8289},
  year = {2010},
  url = {http://link.springer.com.ezproxy.elib10.ub.unimaas.nl/article/10.1007/s11786-010-0027-4},
  doi = {10.1007/s11786-010-0027-4},
  abstract = {Strategies specify how a wide range of exercises can be solved incrementally, such as bringing a logic proposition to disjunctive normal form, reducing a matrix, or calculating with fractions. In this paper we introduce a language for specifying strategies for solving exercises. This language makes it easier to automatically calculate feedback, for example when a user makes an erroneous step in a calculation. We can automatically generate worked-out examples, track the progress of a student by inspecting submitted intermediate answers, and report back suggestions in case the student deviates from the strategy. Thus it becomes less labor-intensive and less ad-hoc to specify new exercise domains and exercises within that domain. A strategy describes valid sequences of rewrite rules, which turns tracking intermediate steps into a parsing problem. This is a promising view at interactive exercises because it allows us to take advantage of many years of experience in parsing sentences of context-free languages, and transfer this knowledge and technology to the domain of stepwise solving exercises. In this paper we work out the similarities between parsing and solving exercises incrementally, we discuss generating feedback on strategies, and the implementation of a strategy recognizer.},
  number = {3},
  journaltitle = {{Mathematics in Computer Science}},
  shortjournal = {{Math.Comput.Sci.}},
  author = {Heeren, Bastiaan and Jeuring, Johan and Gerdes, Alex},
  urldate = {2014-11-23},
  date = {2010-05-01},
  pages = {349--370},
  langid = {english},
  keywords = {Computer Science, general,Context-free grammar,Feedback,Interactive exercises,Mathematics, general,Recognizer,Strategy language},
  file = {Full Text PDF:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/FSUNMURN/Heeren et al. - 2010 - Specifying Rewrite Strategies for Interactive Exer.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/6S2PEEKD/10.html:text/html}
}

@inproceedings{zimmerman2011instant,
  title = {{Toward instant gradeification}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5876114},
  booktitle = {{Software Engineering Education and Training (CSEE\&T), 2011 24th IEEE-CS Conference on}},
  publisher = {{IEEE}},
  author = {Zimmerman, Daniel M. and Kiniry, Joseph R. and Fairmichael, Fintan},
  urldate = {2014-11-23},
  date = {2011},
  year = {2011},
  pages = {406--410},
  file = {[PDF] from washington.edu:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/WF6AHWNW/Zimmerman et al. - 2011 - Toward instant gradeification.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/U58FI78W/login.html:text/html}
}

@inproceedings{stegeman2014empirically,
  title = {{Towards an empirically validated model for assessment of code quality}},
  url = {http://dl.acm.org/citation.cfm?id=2674702},
  booktitle = {{Proceedings of the 14th Koli Calling International Conference on Computing Education Research}},
  publisher = {{ACM}},
  author = {Stegeman, Martijn and Barendsen, Erik and Smetsers, Sjaak},
  urldate = {2014-11-24},
  date = {2014},
  year = {2014},
  pages = {99--108},
  file = {scriptie.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/B3MMZSX5/scriptie.pdf:application/pdf;Snapshot:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/AW6UAX3S/citation.html:text/html;StegemanEmpiricalModelCodeQuality.pdf:/home/boris/.mozilla/firefox/ctfd12yg.default-1414612620349/zotero/storage/DM8HEXJC/StegemanEmpiricalModelCodeQuality.pdf:application/pdf}
}

@article{keuning2014strategy,
  title={Strategy-based feedback for imperative programming exercises},
  author={Keuning, Hieke},
  year={2014},
  publisher={Open Universiteit Nederland}
}

@article{xu2003transformation,
  title={Transformation-based diagnosis of student programs for programming tutoring systems},
  author={Xu, Songwen and San Chee, Yam},
  journal={Software Engineering, IEEE Transactions on},
  volume={29},
  number={4},
  pages={360--384},
  year={2003},
  publisher={IEEE}
}
